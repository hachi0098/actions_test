name: GitHub Actions Demo
on: 
  push:
    branches:
      - issue*
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - name: Check if all reviews are approved
        id: check-reviews
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the pull request number
          pull_request_number=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          # Get the repository name and owner
          repository=$(jq --raw-output .repository.full_name "$GITHUB_EVENT_PATH")
          # Get the state of all reviews for the pull request
          reviews=$(curl -s -H "Authorization: token $GITHUB_TOKEN" "https://api.github.com/repos/$repository/pulls/$pull_request_number/reviews")
          # Check if all reviews have state "APPROVED"
          approved=true
          for review in $(echo "$reviews" | jq -r '.[].state'); do
            if [ "$review" != "APPROVED" ]; then
              approved=false
              break
            fi
          done
          # If all reviews are approved, continue with next step
          if [ "$approved" = true ]; then
            echo ::set-output name=approved::true
          else
            echo ::set-output name=approved::false
          fi
      - name: check status
        if: steps.check-reviews.outputs.approved != 'true'
        run: exit 1  
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."
